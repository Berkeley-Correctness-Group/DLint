{"name":"Dlint","tagline":"Runtime checker for JS coding practices","body":"# DLint\r\n\r\n\r\n[Wiki](https://github.com/Berkeley-Correctness-Group/DLint/wiki/DLint-Wiki-Page) | [Configuring](https://github.com/Berkeley-Correctness-Group/DLint/wiki/DLint-Developer-Guide#how-to-configure-dlint-checkers) | [Checkers](https://github.com/Berkeley-Correctness-Group/DLint/wiki/DLint-Checkers) | [Develop](https://github.com/Berkeley-Correctness-Group/DLint/wiki/DLint-Developer-Guide) | [Mailing List](https://groups.google.com/forum/#!forum/dlint) | [Homepage](http://berkeley-correctness-group.github.io/DLint/)\r\n\r\n\r\nDLint is a tool for dynamically checking JavaScript coding practices.   \r\n\r\nBriefly speaking, [JSHint](http://jshint.com/), [JSLint](http://www.jslint.com/) and [ESLint](http://eslint.org/) uses static analysis (scan the code) to find bad coding practices, while DLint uses dynamic analysis (by analysing runtime behavior) to do the detection. \r\n\r\nBy analyzing runtime information, DLint is capable of capturing violations of coding practices missed by those static analysis tools.\r\n(See an [online demo](https://www.eecs.berkeley.edu/~gongliang13/jalangi_ff/demo_integrated.htm) of dynamic analysis.)\r\n\r\nFor more details, a [Wiki page](https://github.com/Berkeley-Correctness-Group/DLint/wiki/DLint-Wiki-Page) is available\r\n\r\n**Academic Resources:** [Preprint](http://mp.binaervarianz.de/issta2015.pdf) in [ISSTA'15](http://issta2015.cs.uoregon.edu/) | [Presentation Slides](http://www.slideshare.net/JacksonGL/issta15-d-lintv3finalpublic) | [Technical Report](http://www.eecs.berkeley.edu/Pubs/TechRpts/2015/EECS-2015-5.pdf) | [Bibtex](http://mp.binaervarianz.de/issta2015.html)\r\n\r\n### Requirements\r\nMake sure that you have the following software installed ([See more](https://github.com/Berkeley-Correctness-Group/DLint/wiki/Install-DLint-Manually#requirements)).  \r\n  * Latest version of [Node.js](http://nodejs.org/).\r\n  * Sun's JDK 1.6 or higher.\r\n  * Command-line git.  \r\n  * Chrome browser if you need to test web apps.\r\n  * Python (http://python.org) version 2.7 or higher\r\n\r\n<!--- \r\n  * libgmp (http://gmplib.org/) is required by cvc3.  Concolic testing uses cvc3 and automaton.jar for constraint solving. The installation script checks if cvc3 and automaton.jar are installed properly.\r\n-->\r\n\r\n**Note:** This project currently only supports Mac OS 10+ (64bit).\r\n\r\nInstall DLint\r\n--------------\r\nUse the following command to install DLint:\r\n```\r\nmkdir dlint\r\ncd dlint\r\ngit clone https://github.com/Berkeley-Correctness-Group/DLint.git\r\ncd DLint\r\n./scripts/install.sh\r\n```\r\n(A backup option is to [manually install DLint](https://github.com/Berkeley-Correctness-Group/DLint/wiki/Install-DLint-Manually).)\r\n\r\nUse DLint\r\n----------\r\n<!---  \r\nEverytime when you open a new cmd window, go to DLint dir first, then (always\r\nremember to) set the path:\r\n```\r\nexport PATH=\"`pwd`/scripts/path_unix\":$PATH\r\n```\r\n-->\r\n\r\nAll following instructions assume that the cmd directory is the ```DLint``` git local repository.\r\n<!---\r\nand that both the main [jalangi](http://github.com/SRA-SiliconValley/jalangi) directory and [noide](https://github.com/JacksonGL/noide) directory are sibling directories of DLint.\r\n-->\r\n\r\n#### Use DLint on Websites\r\n\r\nApply Dlint to a real-world website:\r\n```\r\n./scripts/dlint.sh <URL>\r\n```\r\nFor example:\r\n```\r\n./scripts/dlint.sh www.sencha.com\r\n```\r\n\r\n<!---\r\nMore examples:\r\n```\r\n./scripts/dlint.sh rallyinteractive.com\r\n./scripts/dlint.sh jackietrananh.com\r\n./scripts/dlint.sh inspectelement.com/theme/expressive\r\n./scripts/dlint.sh www.apple.com/macbook\r\n```\r\n-->\r\nPlease do not interact with the DLint-started browser, DLint will automatically close the browser after analysis. When it is done, all executed files and analysis result will be dumped in ```websites\\<URL>``` directory, in which ```analysis.json``` contains all DLint warnings.  \r\n(A [step-by-step guide](https://github.com/Berkeley-Correctness-Group/DLint/wiki/Try-DLint-on-a-Virtual-Machine#step-3-use-dlint-in-the-vm) is available.)\r\n\r\n\r\nTo view the DLint results in GUI (modified [noide](https://github.com/davidjamesstone/noide) file viewer), open a new terminal (under DLint repository dir) and type the following command:\r\n```\r\nnode ../noide/bin/noide.js websites/\r\n```\r\nIn browser, view the page with this URL: \r\n[http://localhost:3000/editor](http://localhost:3000/editor)\r\n\r\n![](https://raw.githubusercontent.com/Berkeley-Correctness-Group/DLint/master/doc/image/view_warning.PNG)\r\n\r\n---\r\n\r\n#### Use DLint on a Single File\r\n\r\nSuppose there is a JS file ```tests/dlint/buggy_CheckNaN.js```:\r\n```\r\npython scripts/dlint.py tests/dlint/buggy_CheckNaN\r\n```\r\nWarnings are written to console and ```jalangi_tmp/analysisResults.json```.\r\n\r\nConfigure and Extend DLint\r\n------------------------------\r\nDLint framework is designed to easily add new dynamic analysis by\r\nadding a new file and overriding a few functions. ([See More](https://github.com/Berkeley-Correctness-Group/DLint/wiki/DLint-Developer-Guide)).\r\n\r\n\r\nTry DLint on VirtualBox\r\n------------------------------\r\nIf you do not have a Mac or Linux OS or a 64bit machine (or if you just want to try DLint without going through those installation steps), one option would be using DLint on a virtual machine. A step-by-step guide is [available](https://github.com/Berkeley-Correctness-Group/DLint/wiki/Try-DLint-on-a-Virtual-Machine).\r\n\r\nDownload [VirtualBox](https://www.VirtualBox.org/) and [DLint VirtualBox image](https://berkeley.box.com/s/m6eys03sihdfm030hqdhaqy05smgjpcb) (1.28GB, MD5: ```1429e4a3bda83169b6ea195952c25c4e```)\r\n\r\nIn the guest OS, open a terminal and type the following commands (or double click the bash script on the desktop):\r\n\r\n```\r\ncd ~/dlint/DLint\r\nexport PATH=\"`pwd`/scripts/path_unix\":$PATH\r\n```\r\nRoot password: ```123```  \r\nGuest OS: 64-bit Linux Ubuntu 12.04  \r\nVM Memory: 512M  \r\nVM Video Memory: 128M  \r\nImage Size: 4.7 GB  \r\nMaximal VM Virtual Disk Size: 20.30 GB  ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}